name: CDK Deploy 1
on: [push]
jobs:
  cdk-deploy:
    runs-on: ubuntu-latest

    # Permissions
    permissions:
      contents: write
      pull-requests: write
      issues: read
      packages: none
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - run: echo " Git Hub Secret Token ${{ secrets.GITHUB_TOKEN }} event."
      - run: echo " Git Hub Token ${{ github.token }} event."
      - run: echo " The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      # Installing jest
      - name: Installing jest
        run: npm install --save-dev jest

      # Init jest
      - name: Installing jest
        run : npx jest --init

      # Init jest
      - name: Installing jest
        run: npx jest

      # Tests and Coverage with Jest
      - name: Run the tests
        run: npm test -- --coverage

      # Code Coverage report
      - name: Code Coverage report
        uses: ArtiomTr/jest-coverage-report-action@v2
        id: coverage
        with:
            output: report-markdown

      # Coverage report Output
      - name: Coverage Output
        uses: marocchino/sticky-pull-request-comment@v2
        with:
            message: ${{ steps.coverage.outputs.report }}

      # Automate AWS CDK Deployments using Github Actions
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      # Bootstraping
      - name :  Bootstraping
        run :  cdk bootstrap --version6

      # Synth stack
      - name: Synth stack
        run: cdk synth

      # Deploy to AWS
      - name: Deploy to AWS
        run: cdk deploy --require-approval=never